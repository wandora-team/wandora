/*
 * WANDORA
 * Knowledge Extraction, Management, and Publishing Application
 * http://wandora.org
 * 
 * Copyright (C) 2004-2023 Wandora Team
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * 
 * ConnnectionPrompt.java
 *
 * Created on 29.6.2005, 16:37
 */

package org.wandora.application.gui;

import org.wandora.utils.swing.ImagePanel;


/**
 *
 * @deprecated
 * @author  olli
 */
public class ConnectionPrompt extends javax.swing.JDialog {
	
	private static final long serialVersionUID = 1L;
	
    private boolean wasCancelled=true;
    private String titleImage = "gui/login_main.gif";
    
    
    /** Creates new form ConnnectionPrompt */
    
    public ConnectionPrompt(java.awt.Frame parent, boolean modal,String host,String port,String map,String user,String pass) {
        this(parent,modal);
        if(host!=null) hostTextField.setText(host); 
        hostTextField.setSelectionStart(0); hostTextField.setSelectionEnd(hostTextField.getText().length()); 
        if(port!=null) portTextField.setText(port); 
        portTextField.setSelectionStart(0); portTextField.setSelectionEnd(portTextField.getText().length()); 
        if(map!=null) mapTextField.setText(map); 
        mapTextField.setSelectionStart(0); mapTextField.setSelectionEnd(mapTextField.getText().length()); 
        if(user!=null) userTextField.setText(user); 
        userTextField.setSelectionStart(0); userTextField.setSelectionEnd(userTextField.getText().length()); 
        if(pass!=null) passwordField.setText(pass); 
        passwordField.setSelectionStart(0); passwordField.setSelectionEnd(passwordField.getText().length()); 
        if(host!=null && host.trim().length()>0){
            if(port!=null && port.trim().length()>0){
                if(map!=null && map.trim().length()>0){
                    userTextField.requestFocus();
                }
                else mapTextField.requestFocus();
            }
            else portTextField.requestFocus();
        }
    }
    public ConnectionPrompt(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocation(parent.getX()+parent.getWidth()/2-this.getWidth()/2,parent.getY()+parent.getHeight()/2-this.getHeight()/2);        
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new org.wandora.application.gui.simple.SimpleLabel();
        hostTextField = new org.wandora.application.gui.simple.SimpleField();
        jLabel2 = new org.wandora.application.gui.simple.SimpleLabel();
        userTextField = new org.wandora.application.gui.simple.SimpleField();
        jLabel3 = new org.wandora.application.gui.simple.SimpleLabel();
        mapTextField = new org.wandora.application.gui.simple.SimpleField();
        jLabel4 = new org.wandora.application.gui.simple.SimpleLabel();
        portTextField = new org.wandora.application.gui.simple.SimpleField();
        jLabel5 = new org.wandora.application.gui.simple.SimpleLabel();
        passwordField = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        connectButton = new org.wandora.application.gui.simple.SimpleButton();
        cancelButton = new org.wandora.application.gui.simple.SimpleButton();
        imagePanel = new ImagePanel(titleImage);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Connect");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Host");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 5, 5);
        getContentPane().add(jLabel1, gridBagConstraints);

        hostTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hostTextFieldKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 0);
        getContentPane().add(hostTextField, gridBagConstraints);

        jLabel2.setText("Port");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 5, 5);
        getContentPane().add(jLabel2, gridBagConstraints);

        userTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userTextFieldKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 10);
        getContentPane().add(userTextField, gridBagConstraints);

        jLabel3.setText("Map identifier");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 5, 5);
        getContentPane().add(jLabel3, gridBagConstraints);

        mapTextField.setText("default");
        mapTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mapTextFieldKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 10);
        getContentPane().add(mapTextField, gridBagConstraints);

        jLabel4.setText("Username");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 5, 5);
        getContentPane().add(jLabel4, gridBagConstraints);

        portTextField.setText("8989");
        portTextField.setMinimumSize(new java.awt.Dimension(50, 20));
        portTextField.setPreferredSize(new java.awt.Dimension(50, 20));
        portTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                portTextFieldKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 5, 10);
        getContentPane().add(portTextField, gridBagConstraints);

        jLabel5.setText("Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 5);
        getContentPane().add(jLabel5, gridBagConstraints);

        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordFieldKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(passwordField, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });
        jPanel1.add(connectButton, new java.awt.GridBagConstraints());

        cancelButton.setText("Cancel");
        cancelButton.setMaximumSize(new java.awt.Dimension(75, 23));
        cancelButton.setMinimumSize(new java.awt.Dimension(75, 23));
        cancelButton.setPreferredSize(new java.awt.Dimension(75, 23));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel1.add(cancelButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        getContentPane().add(jPanel1, gridBagConstraints);

        imagePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        getContentPane().add(imagePanel, gridBagConstraints);

        setSize(new java.awt.Dimension(437, 205));
    }// </editor-fold>//GEN-END:initComponents

    private void passwordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyPressed
        if(evt.getKeyCode()==evt.VK_ENTER) doConnect();
    }//GEN-LAST:event_passwordFieldKeyPressed

    private void userTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userTextFieldKeyPressed
        if(evt.getKeyCode()==evt.VK_ENTER) doConnect();
    }//GEN-LAST:event_userTextFieldKeyPressed

    private void mapTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mapTextFieldKeyPressed
        if(evt.getKeyCode()==evt.VK_ENTER) doConnect();
    }//GEN-LAST:event_mapTextFieldKeyPressed

    private void portTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_portTextFieldKeyPressed
        if(evt.getKeyCode()==evt.VK_ENTER) doConnect();
    }//GEN-LAST:event_portTextFieldKeyPressed

    private void hostTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hostTextFieldKeyPressed
        if(evt.getKeyCode()==evt.VK_ENTER) doConnect();
    }//GEN-LAST:event_hostTextFieldKeyPressed

    private void doConnect(){
        wasCancelled=false;
        this.setVisible(false);        
    }
    
    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        doConnect();
    }//GEN-LAST:event_connectButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        wasCancelled=true;
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    public boolean wasCancelled(){return wasCancelled;}
    
    public String getHost(){return hostTextField.getText();}
    public String getPort(){return portTextField.getText();}
    public String getMap(){return mapTextField.getText();}
    public String getUser(){return userTextField.getText();}
    public String getPassword(){return passwordField.getText();}

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton connectButton;
    private javax.swing.JTextField hostTextField;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField mapTextField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField portTextField;
    private javax.swing.JTextField userTextField;
    // End of variables declaration//GEN-END:variables
    
}
